# name: CI

# on:
#   push:
#     branches: [ "**" ]
#   pull_request:
#     branches: [ "**" ]

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# env:
#   PYTHON_VERSION: "3.12"

# jobs:
#   lint:
#     name: Lint (ruff)
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Cache uv virtualenv
#         uses: actions/cache@v4
#         with:
#           path: |
#             .venv
#             ~/.cache/uv
#           key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
#           restore-keys: |
#             uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

#       - name: Install uv and sync
#         run: |
#           python -m pip install --upgrade pip
#           pip install uv
#           uv sync --dev

#       - name: Ruff check
#         run: uv run ruff check .

#       - name: Ruff format --check
#         run: uv run ruff format --check

#   typecheck:
#     name: Type Check (mypy)
#     runs-on: ubuntu-latest
#     needs: [lint]
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Cache uv virtualenv
#         uses: actions/cache@v4
#         with:
#           path: |
#             .venv
#             ~/.cache/uv
#           key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
#           restore-keys: |
#             uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

#       - name: Install uv and sync
#         run: |
#           python -m pip install --upgrade pip
#           pip install uv
#           uv sync --dev

#       - name: mypy
#         run: uv run mypy src

#   test:
#     name: Test (pytest)
#     runs-on: ubuntu-latest
#     needs: [typecheck]
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Cache uv virtualenv
#         uses: actions/cache@v4
#         with:
#           path: |
#             .venv
#             ~/.cache/uv
#           key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
#           restore-keys: |
#             uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

#       - name: Install uv and sync
#         run: |
#           python -m pip install --upgrade pip
#           pip install uv
#           uv sync --dev

#       - name: Run pytest (with JUnit output)
#         run: |
#           uv run pytest -q --doctest-glob="*.md" --strict-markers \
#             -o junit_family=xunit2 --junitxml=junit.xml

#       - name: Upload JUnit report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: junit
#           path: junit.xml

#   docs:
#     name: Build Docs (MkDocs + schema export)
#     runs-on: ubuntu-latest
#     needs: [test]
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Cache uv virtualenv
#         uses: actions/cache@v4
#         with:
#           path: |
#             .venv
#             ~/.cache/uv
#           key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
#           restore-keys: |
#             uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

#       - name: Install uv and sync
#         run: |
#           python -m pip install --upgrade pip
#           pip install uv
#           uv sync --dev

#       - name: Export JSON Schemas
#         run: uv run python scripts/export_schema.py

#       - name: Build MkDocs (strict)
#         run: uv run mkdocs build --strict

#       - name: Upload built site
#         uses: actions/upload-artifact@v4
#         with:
#           name: site
#           path: site
